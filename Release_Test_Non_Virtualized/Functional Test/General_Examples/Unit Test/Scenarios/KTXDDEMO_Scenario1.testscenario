<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 19.3.1.v20181214-1343_790?>
<!--Topaz for Total Test 19.3.1.v20181214-1343_790 08.02.2019 11:24:59-->
<testscenario:testscenario xmlns:checkconditions="http://www.compuware.com/model/xml/checkconditions" xmlns:listructure="http://www.compuware.com/model/xml/listructure" xmlns:properties="http://www.compuware.com/model/xml/properties" xmlns:testcase="http://www.compuware.com/model/xml/testcase" xmlns:testscenario="http://www.compuware.com/model/xml/testscenario" alias="" id="Unit%20Test/Scenarios/KTXDDEMO_Scenario1.testscenario"><testscenario:description></testscenario:description><testscenario:testcases><testscenario:testcase alias="" csect="KTXDDEMO" encoding="1047" entrypoint="KTXDDEMO" id="Unit%20Test/Scenarios/KTXDDEMO_Scenario1.testscenario%23KTXDDEMOCase1" target="KTXDDEMO"><testcase:description></testcase:description><testcase:ddiotype>NONE</testcase:ddiotype><testcase:targetCaptureCompileTime>1548371999000</testcase:targetCaptureCompileTime><testcase:interface>../Interfaces/KTXDDEMO.interface#Unit%20Test/Interfaces/KTXDDEMO.interface</testcase:interface><testcase:input listructure="../Structures/KTXDDEMO_dfheiblk.listructure#Unit%20Test/Structures/KTXDDEMO_dfheiblk.listructure"><testcase:data baseType="listructure:structType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk" id="arg0.dfheiblk"><properties:properties><properties:property name="value" type="string">0052253C0119039FD2E3E7C40004177CC3F4F3F60000000400007D00000000000000000000000000000000000000000000000040404040404040400000000000000000000000000000000000000000000000000000</properties:property><properties:property name="expectedValue" type="string">0052327F0119039FD2E3E7C40004177CC3F4F3F60000000400007D0A0600000000000000000000000000000000000000000000E3E3E360E6C5E2E30000000000000000000000000000000000000000000000000000</properties:property></properties:properties></testcase:data><testcase:data baseType="listructure:numberType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibtime" id="input.arg0.dfheiblk.eibtime" offset="0"/><testcase:data baseType="listructure:numberType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibdate" id="input.arg0.dfheiblk.eibdate" offset="4"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibtrnid" id="input.arg0.dfheiblk.eibtrnid" offset="8"/><testcase:data baseType="listructure:numberType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibtaskn" id="input.arg0.dfheiblk.eibtaskn" offset="12"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibtrmid" id="input.arg0.dfheiblk.eibtrmid" offset="16"/><testcase:data baseType="listructure:numberType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.dfheigdi" id="input.arg0.dfheiblk.dfheigdi" offset="20"/><testcase:data baseType="listructure:numberType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibcposn" id="input.arg0.dfheiblk.eibcposn" offset="22"/><testcase:data baseType="listructure:numberType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibcalen" id="input.arg0.dfheiblk.eibcalen" offset="24"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibaid" id="input.arg0.dfheiblk.eibaid" offset="26"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibfn" id="input.arg0.dfheiblk.eibfn" offset="27"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibrcode" id="input.arg0.dfheiblk.eibrcode" offset="29"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibds" id="input.arg0.dfheiblk.eibds" offset="35"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibreqid" id="input.arg0.dfheiblk.eibreqid" offset="43"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibrsrce" id="input.arg0.dfheiblk.eibrsrce" offset="51"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibsync" id="input.arg0.dfheiblk.eibsync" offset="59"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibfree" id="input.arg0.dfheiblk.eibfree" offset="60"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibrecv" id="input.arg0.dfheiblk.eibrecv" offset="61"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibfil01" id="input.arg0.dfheiblk.eibfil01" offset="62"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibatt" id="input.arg0.dfheiblk.eibatt" offset="63"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibeoc" id="input.arg0.dfheiblk.eibeoc" offset="64"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibfmh" id="input.arg0.dfheiblk.eibfmh" offset="65"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibcompl" id="input.arg0.dfheiblk.eibcompl" offset="66"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibsig" id="input.arg0.dfheiblk.eibsig" offset="67"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibconf" id="input.arg0.dfheiblk.eibconf" offset="68"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eiberr" id="input.arg0.dfheiblk.eiberr" offset="69"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eiberrcd" id="input.arg0.dfheiblk.eiberrcd" offset="70"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibsynrb" id="input.arg0.dfheiblk.eibsynrb" offset="74"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibnodat" id="input.arg0.dfheiblk.eibnodat" offset="75"/><testcase:data baseType="listructure:numberType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibresp" id="input.arg0.dfheiblk.eibresp" offset="76"/><testcase:data baseType="listructure:numberType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibresp2" id="input.arg0.dfheiblk.eibresp2" offset="80"/><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_dfheiblk.listructure#dfheiblk.eibrldbk" id="input.arg0.dfheiblk.eibrldbk" offset="84"/></testcase:input><testcase:input listructure="../Structures/KTXDDEMO_DFHCOMMAREA.listructure#Unit%20Test/Structures/KTXDDEMO_DFHCOMMAREA.listructure"><testcase:data baseType="listructure:structType ../Structures/KTXDDEMO_DFHCOMMAREA.listructure#DFHCOMMAREA" id="arg1.DFHCOMMAREA"><properties:properties><properties:property name="value" type="string"></properties:property><properties:property name="expectedValue" type="string"></properties:property></properties:properties></testcase:data><testcase:data baseType="listructure:stringType ../Structures/KTXDDEMO_DFHCOMMAREA.listructure#DFHCOMMAREA.DFHCOMMAREA" id="input.arg1.DFHCOMMAREA.DFHCOMMAREA" offset="0"/></testcase:input><testcase:output listructure="../Structures/KTXDDEMO_dfheiblk.listructure#Unit%20Test/Structures/KTXDDEMO_dfheiblk.listructure"/><testcase:output listructure="../Structures/KTXDDEMO_DFHCOMMAREA.listructure#Unit%20Test/Structures/KTXDDEMO_DFHCOMMAREA.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for eibtime failed" name="Check for eibtime" refData="#input.arg0.dfheiblk.eibtime"><checkconditions:expression>BigDecimalCreator.make('52327').compareTo(output.arg0.dfheiblk.eibtime) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">52327</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibdate failed" name="Check for eibdate" refData="#input.arg0.dfheiblk.eibdate"><checkconditions:expression>BigDecimalCreator.make('119039').compareTo(output.arg0.dfheiblk.eibdate) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">119039</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibtrnid failed" name="Check for eibtrnid" refData="#input.arg0.dfheiblk.eibtrnid"><checkconditions:expression>'KTXD' eq output.arg0.dfheiblk.eibtrnid</checkconditions:expression><checkconditions:expectation assert="=" type="string">KTXD</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibtaskn failed" name="Check for eibtaskn" refData="#input.arg0.dfheiblk.eibtaskn"><checkconditions:expression>BigDecimalCreator.make('4177').compareTo(output.arg0.dfheiblk.eibtaskn) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">4177</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibtrmid failed" name="Check for eibtrmid" refData="#input.arg0.dfheiblk.eibtrmid"><checkconditions:expression>'C436' eq output.arg0.dfheiblk.eibtrmid</checkconditions:expression><checkconditions:expectation assert="=" type="string">C436</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for dfheigdi failed" name="Check for dfheigdi" refData="#input.arg0.dfheiblk.dfheigdi"><checkconditions:expression>BigDecimalCreator.make('0').compareTo(output.arg0.dfheiblk.dfheigdi) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">0</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibcposn failed" name="Check for eibcposn" refData="#input.arg0.dfheiblk.eibcposn"><checkconditions:expression>BigDecimalCreator.make('4').compareTo(output.arg0.dfheiblk.eibcposn) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">4</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibcalen failed" name="Check for eibcalen" refData="#input.arg0.dfheiblk.eibcalen"><checkconditions:expression>BigDecimalCreator.make('0').compareTo(output.arg0.dfheiblk.eibcalen) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">0</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibaid failed" name="Check for eibaid" refData="#input.arg0.dfheiblk.eibaid"><checkconditions:expression>&quot;'&quot; eq output.arg0.dfheiblk.eibaid</checkconditions:expression><checkconditions:expectation assert="=" type="string">'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibfn failed" name="Check for eibfn" refData="#input.arg0.dfheiblk.eibfn"><checkconditions:expression>x'0A06' eq output.arg0.dfheiblk.eibfn</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'0A06'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibrcode failed" name="Check for eibrcode" refData="#input.arg0.dfheiblk.eibrcode"><checkconditions:expression>x'000000000000' eq output.arg0.dfheiblk.eibrcode</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'000000000000'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibds failed" name="Check for eibds" refData="#input.arg0.dfheiblk.eibds"><checkconditions:expression>x'0000000000000000' eq output.arg0.dfheiblk.eibds</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'0000000000000000'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibreqid failed" name="Check for eibreqid" refData="#input.arg0.dfheiblk.eibreqid"><checkconditions:expression>x'0000000000000000' eq output.arg0.dfheiblk.eibreqid</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'0000000000000000'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibrsrce failed" name="Check for eibrsrce" refData="#input.arg0.dfheiblk.eibrsrce"><checkconditions:expression>'TTT-WEST' eq output.arg0.dfheiblk.eibrsrce</checkconditions:expression><checkconditions:expectation assert="=" type="string">TTT-WEST</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibsync failed" name="Check for eibsync" refData="#input.arg0.dfheiblk.eibsync"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibsync</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibfree failed" name="Check for eibfree" refData="#input.arg0.dfheiblk.eibfree"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibfree</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibrecv failed" name="Check for eibrecv" refData="#input.arg0.dfheiblk.eibrecv"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibrecv</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibfil01 failed" name="Check for eibfil01" refData="#input.arg0.dfheiblk.eibfil01"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibfil01</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibatt failed" name="Check for eibatt" refData="#input.arg0.dfheiblk.eibatt"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibatt</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibeoc failed" name="Check for eibeoc" refData="#input.arg0.dfheiblk.eibeoc"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibeoc</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibfmh failed" name="Check for eibfmh" refData="#input.arg0.dfheiblk.eibfmh"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibfmh</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibcompl failed" name="Check for eibcompl" refData="#input.arg0.dfheiblk.eibcompl"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibcompl</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibsig failed" name="Check for eibsig" refData="#input.arg0.dfheiblk.eibsig"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibsig</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibconf failed" name="Check for eibconf" refData="#input.arg0.dfheiblk.eibconf"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibconf</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eiberr failed" name="Check for eiberr" refData="#input.arg0.dfheiblk.eiberr"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eiberr</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eiberrcd failed" name="Check for eiberrcd" refData="#input.arg0.dfheiblk.eiberrcd"><checkconditions:expression>x'00000000' eq output.arg0.dfheiblk.eiberrcd</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00000000'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibsynrb failed" name="Check for eibsynrb" refData="#input.arg0.dfheiblk.eibsynrb"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibsynrb</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibnodat failed" name="Check for eibnodat" refData="#input.arg0.dfheiblk.eibnodat"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibnodat</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibresp failed" name="Check for eibresp" refData="#input.arg0.dfheiblk.eibresp"><checkconditions:expression>BigDecimalCreator.make('0').compareTo(output.arg0.dfheiblk.eibresp) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">0</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibresp2 failed" name="Check for eibresp2" refData="#input.arg0.dfheiblk.eibresp2"><checkconditions:expression>BigDecimalCreator.make('0').compareTo(output.arg0.dfheiblk.eibresp2) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">0</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for eibrldbk failed" name="Check for eibrldbk" refData="#input.arg0.dfheiblk.eibrldbk"><checkconditions:expression>x'00' eq output.arg0.dfheiblk.eibrldbk</checkconditions:expression><checkconditions:expectation assert="=" type="string">x'00'</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs><testcase:stub>../Stubs/KTXDDEMO_CWKTDATE_01.stub#Unit%20Test/Stubs/KTXDDEMO_CWKTDATE_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_EXEC_CICS_ASSIGN1_01.stub#Unit%20Test/Stubs/KTXDDEMO_EXEC_CICS_ASSIGN1_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_QUEUE_TS_TTT-SOUTH_01.stub#Unit%20Test/Stubs/KTXDDEMO_QUEUE_TS_TTT-SOUTH_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_QUEUE_TS_TTT-EAST_01.stub#Unit%20Test/Stubs/KTXDDEMO_QUEUE_TS_TTT-EAST_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_EXEC_CICS_FORMATTIME1_01.stub#Unit%20Test/Stubs/KTXDDEMO_EXEC_CICS_FORMATTIME1_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_QUEUE_TS_TTT-TEMP_01.stub#Unit%20Test/Stubs/KTXDDEMO_QUEUE_TS_TTT-TEMP_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_BMS_SEND_RECEIVE_01.stub#Unit%20Test/Stubs/KTXDDEMO_BMS_SEND_RECEIVE_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_QUEUE_TS_TTT-WEST_01.stub#Unit%20Test/Stubs/KTXDDEMO_QUEUE_TS_TTT-WEST_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_EXEC_CICS_RETURN1_01.stub#Unit%20Test/Stubs/KTXDDEMO_EXEC_CICS_RETURN1_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_EXEC_CICS_ASKTIME1_01.stub#Unit%20Test/Stubs/KTXDDEMO_EXEC_CICS_ASKTIME1_01.stub</testcase:stub><testcase:stub>../Stubs/KTXDDEMO_QUEUE_TS_TTT-NORTH_01.stub#Unit%20Test/Stubs/KTXDDEMO_QUEUE_TS_TTT-NORTH_01.stub</testcase:stub></testcase:stubs></testscenario:testcase></testscenario:testcases></testscenario:testscenario>