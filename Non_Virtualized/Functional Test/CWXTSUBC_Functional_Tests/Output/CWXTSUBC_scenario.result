<?xml version="1.0" encoding="UTF-8"?>
<XaUnitResult resultType="VERIFICATION_ERROR" containsSimulation="false">
  <ExecutionId>232e1777-dd54-4be9-9238-12ccdd92b614</ExecutionId>
  <Message />
  <AST>
    <XaUnit xmlns="http://www.xact.dk/xatester/v/1" xmlns:data="http://www.xact.dk/xatester/data/v/1">
      <Test>
        <Variable id="data">
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>0</salesamount_input>
            <factor>0</factor>
            <commtotal>0</commtotal>
            <commtotal_expected>0</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>1</salesamount_input>
            <factor>0.02</factor>
            <commtotal>0.02</commtotal>
            <commtotal_expected>0.02</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>75000</salesamount_input>
            <factor>0.02</factor>
            <commtotal>1500</commtotal>
            <commtotal_expected>1500</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>100000</salesamount_input>
            <factor>0.02</factor>
            <commtotal>2000</commtotal>
            <commtotal_expected>2000</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>100001</salesamount_input>
            <factor>0.025</factor>
            <commtotal>2500.025</commtotal>
            <commtotal_expected>2500.03</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>150000</salesamount_input>
            <factor>0.025</factor>
            <commtotal>3750</commtotal>
            <commtotal_expected>3750</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>200000</salesamount_input>
            <factor>0.025</factor>
            <commtotal>5000</commtotal>
            <commtotal_expected>5000</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>200001</salesamount_input>
            <factor>0.03</factor>
            <commtotal>6000.03</commtotal>
            <commtotal_expected>6000.03</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>250000</salesamount_input>
            <factor>0.03</factor>
            <commtotal>7500</commtotal>
            <commtotal_expected>7500</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>300000</salesamount_input>
            <factor>0.03</factor>
            <commtotal>9000</commtotal>
            <commtotal_expected>9000</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>300001</salesamount_input>
            <factor>0.035</factor>
            <commtotal>10500.035000000002</commtotal>
            <commtotal_expected>10500.04</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>350000</salesamount_input>
            <factor>0.035</factor>
            <commtotal>12250.000000000002</commtotal>
            <commtotal_expected>12250</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>400000</salesamount_input>
            <factor>0.035</factor>
            <commtotal>14000.000000000002</commtotal>
            <commtotal_expected>14000</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>400001</salesamount_input>
            <factor>0.04</factor>
            <commtotal>16000.04</commtotal>
            <commtotal_expected>16000.04</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>450000</salesamount_input>
            <factor>0.04</factor>
            <commtotal>18000</commtotal>
            <commtotal_expected>18000</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>M</emptype_input>
            <salesamount_input>500000</salesamount_input>
            <factor>0.04</factor>
            <commtotal>20000</commtotal>
            <commtotal_expected>20000</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>0</salesamount_input>
            <factor>0</factor>
            <commtotal>0</commtotal>
            <commtotal_expected>0</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>1</salesamount_input>
            <factor>0.02</factor>
            <commtotal>0.02</commtotal>
            <commtotal_expected>0.02</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>15000</salesamount_input>
            <factor>0.02</factor>
            <commtotal>300</commtotal>
            <commtotal_expected>300</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>20000</salesamount_input>
            <factor>0.02</factor>
            <commtotal>400</commtotal>
            <commtotal_expected>400</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>20001</salesamount_input>
            <factor>0.04</factor>
            <commtotal>800.04</commtotal>
            <commtotal_expected>800.04</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>25000</salesamount_input>
            <factor>0.04</factor>
            <commtotal>1000</commtotal>
            <commtotal_expected>1000</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>40000</salesamount_input>
            <factor>0.04</factor>
            <commtotal>1600</commtotal>
            <commtotal_expected>1600</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>40001</salesamount_input>
            <factor>0.06</factor>
            <commtotal>2400.06</commtotal>
            <commtotal_expected>2400.06</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>55000</salesamount_input>
            <factor>0.06</factor>
            <commtotal>3300</commtotal>
            <commtotal_expected>3300</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>60000</salesamount_input>
            <factor>0.06</factor>
            <commtotal>3600</commtotal>
            <commtotal_expected>3600</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>60001</salesamount_input>
            <factor>0.08</factor>
            <commtotal>4800.08</commtotal>
            <commtotal_expected>4800.08</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>75000</salesamount_input>
            <factor>0.08</factor>
            <commtotal>6000</commtotal>
            <commtotal_expected>6000</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>80000</salesamount_input>
            <factor>0.08</factor>
            <commtotal>6400</commtotal>
            <commtotal_expected>6400</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>80001</salesamount_input>
            <factor>0.1</factor>
            <commtotal>8000.1</commtotal>
            <commtotal_expected>8000.1</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>85000</salesamount_input>
            <factor>0.1</factor>
            <commtotal>8500</commtotal>
            <commtotal_expected>8500</commtotal_expected>
          </testcase>
          <testcase>
            <emptype_input>S</emptype_input>
            <salesamount_input>100000</salesamount_input>
            <factor>0.1</factor>
            <commtotal>10000</commtotal>
            <commtotal_expected>10000</commtotal_expected>
          </testcase>
        </Variable>
        <IterateData id="iterate" referencedId="data" dataPath="">
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>0</sales-amount>
              <comm-total expected="0">0</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>1</sales-amount>
              <comm-total expected="0.02">0.02</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>75000</sales-amount>
              <comm-total expected="1500">1500</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>100000</sales-amount>
              <comm-total expected="2000">2000</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>100001</sales-amount>
              <comm-total expected="2500.03" verifiedFalse="DataItem: /comm-total. Actual value is different from expected. Actual value: 2500.02 Expected: 2500.03">2500.02</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>150000</sales-amount>
              <comm-total expected="3750">3750</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>200000</sales-amount>
              <comm-total expected="5000">5000</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>200001</sales-amount>
              <comm-total expected="6000.03">6000.03</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>250000</sales-amount>
              <comm-total expected="7500">7500</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>300000</sales-amount>
              <comm-total expected="9000">9000</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>300001</sales-amount>
              <comm-total expected="10500.04" verifiedFalse="DataItem: /comm-total. Actual value is different from expected. Actual value: 10500.03 Expected: 10500.04">10500.03</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>350000</sales-amount>
              <comm-total expected="12250">12250</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>400000</sales-amount>
              <comm-total expected="14000">14000</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>400001</sales-amount>
              <comm-total expected="16000.04">16000.04</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>450000</sales-amount>
              <comm-total expected="18000">18000</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>M</emp-type>
              <sales-amount>500000</sales-amount>
              <comm-total expected="20000">20000</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>0</sales-amount>
              <comm-total expected="0">0</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>1</sales-amount>
              <comm-total expected="0.02">0.02</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>15000</sales-amount>
              <comm-total expected="300">300</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>20000</sales-amount>
              <comm-total expected="400">400</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>20001</sales-amount>
              <comm-total expected="800.04">800.04</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>25000</sales-amount>
              <comm-total expected="1000">1000</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>40000</sales-amount>
              <comm-total expected="1600">1600</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>40001</sales-amount>
              <comm-total expected="2400.06">2400.06</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>55000</sales-amount>
              <comm-total expected="3300">3300</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>60000</sales-amount>
              <comm-total expected="3600">3600</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>60001</sales-amount>
              <comm-total expected="4800.08" verifiedFalse="DataItem: /comm-total. Actual value is different from expected. Actual value: 5400.09 Expected: 4800.08">5400.09</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>75000</sales-amount>
              <comm-total expected="6000" verifiedFalse="DataItem: /comm-total. Actual value is different from expected. Actual value: 6750.0 Expected: 6000.0">6750</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>80000</sales-amount>
              <comm-total expected="6400" verifiedFalse="DataItem: /comm-total. Actual value is different from expected. Actual value: 7200.0 Expected: 6400.0">7200</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>80001</sales-amount>
              <comm-total expected="8000.1" verifiedFalse="DataItem: /comm-total. Actual value is different from expected. Actual value: 9600.12 Expected: 8000.1">9600.12</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>85000</sales-amount>
              <comm-total expected="8500" verifiedFalse="DataItem: /comm-total. Actual value is different from expected. Actual value: 10200.0 Expected: 8500.0">10200</comm-total>
            </Data>
          </Component>
          <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" programExit="0" rollback="false">
            <Data>
              <emp-type>S</emp-type>
              <sales-amount>100000</sales-amount>
              <comm-total expected="10000" verifiedFalse="DataItem: /comm-total. Actual value is different from expected. Actual value: 12000.0 Expected: 10000.0">12000</comm-total>
            </Data>
          </Component>
        </IterateData>
      </Test>
      <MetaData>
        <Component name="CWXTSUBC" type="COBOL">
          <INOUT>
            <emp-type type="Character" length="1" bytes="1" />
            <sales-amount type="NumericDisplay" length="8" bytes="8" signed="false" decimals="2" />
            <comm-total type="NumericPacked" length="7" bytes="4" signed="false" decimals="2" />
          </INOUT>
        </Component>
      </MetaData>
    </XaUnit>
  </AST>
  <Context>
    <ExecutionContext xmlns="http://www.xact.dk/xatester/v/1" environment="5cee98c2d3142c1f90a4976d" logLevel="LOG" remote="false" useSimulations="true" uploadResult="false" timeout="600" readTimeout="30" debuggerType="CCEXPEDITER" jobInfoInterval="3" userid="HDDRXM0" ccrepository="HDDRXM0.DEMO.COCO.REPOS" ccsystem="CONFERENCE" cctestid="CWXTSUBC" ccreset="true">
      <platformruntime database="DBCCCWCC" driver="com.ibm.db2.jcc.DB2Driver" uri="jdbc:db2://cwcc.compuware.com:546/${database}" environmenttype="BATCH" callinterface="NONE" />
      <ExtensionData />
      <ExtensionData componentName="cwxtsubc" componentId="5cee9a97d3142c1f90a49773">
        <Parameter key="sourcelibrary">
          <Value>HDDRXM0.DEMO.COB.BATCH</Value>
        </Parameter>
        <Parameter key="loadlibraries">
          <Value>HDDRXM0.DEMO.LOAD.PDSE</Value>
        </Parameter>
        <Parameter key="callinterface">
          <Value>NONE</Value>
        </Parameter>
      </ExtensionData>
      <References componentName="cwxtsubc" />
      <XaUnit xmlns:data="http://www.xact.dk/xatester/data/v/1" componentNameUnderTest="cwxtsubc" path="CWXTSUBC_scenario.scenario">
        <Test>
          <Variable id="data" filePath="../Data/CWXTSUBC Test Cases.xlsx" />
          <IterateData id="iterate" referencedId="data" dataPath="">
            <Component id="cwxtsubc" label="CWXTSUBC" moduleName="CWXTSUBC" programExitVerify="value &lt; 8" rollback="false">
              <Data>
                <emp-type>=iterate.testcase.emptype_input</emp-type>
                <sales-amount>=iterate.testcase.salesamount_input</sales-amount>
                <comm-total expected="=iterate.testcase.commtotal_expected" />
              </Data>
            </Component>
          </IterateData>
        </Test>
        <MetaData>
          <Component name="CWXTSUBC" type="COBOL">
            <INOUT>
              <emp-type type="Character" length="1" bytes="1" />
              <sales-amount type="NumericDisplay" length="8" bytes="8" signed="false" decimals="2" />
              <comm-total type="NumericPacked" length="7" bytes="4" signed="false" decimals="2" />
            </INOUT>
          </Component>
        </MetaData>
      </XaUnit>
      <ExternalResources>
        <Resource path="../Data/CWXTSUBC Test Cases.xlsx"><![CDATA[]]></Resource>
      </ExternalResources>
    </ExecutionContext>
  </Context>
  <Started>20200928-12-44-56</Started>
  <Ended>20200928-12-49-52</Ended>
</XaUnitResult>
