<?xml version="1.0" encoding="UTF-8"?>
<XaUnit xmlns="http://www.xact.dk/xatester/v/1" xmlns:data="http://www.xact.dk/xatester/data/v/1" componentNameUnderTest="xadb2tst">
  <Description>Program receives a "function code" and data via linkage section. Based on the function code it executes different functions against DB2 table XAEMPLOYEE like&#xD;
Insert, Get, Delete, Modify&#xD;
&#xD;
Scenario to test Modify function&#xD;
- read data to be used from local file: Before modify and after modify&#xD;
- use variables for table name and creator name of DB2 table&#xD;
- use variables for old values from local input file&#xD;
- use variables for "fixed" expected values&#xD;
- retrieve highest existing row id from the table and calculate next possible id&#xD;
&#xD;
- use the next row id insert new row into table natively using the "before" data from local file&#xD;
- verify that no result was returned, i.e. the row does not exist and can be inserted&#xD;
&#xD;
Execute two test case&#xD;
Positive - Existing row&#xD;
- Use next row id function code "modify" to execute program, using "after" data from local file&#xD;
- use the next row id again and retrieve data natively from table&#xD;
- verify that data retrieved from table matches the "after" data from local file&#xD;
&#xD;
Negative - Non existing row&#xD;
- Calculate new row id&#xD;
- retrieve data from table natively, using new row id &#xD;
- verify that no data was retrieved, otherwise abort test&#xD;
- execute program using new row id and "after" data from local file&#xD;
- Verify that return code indicates error&#xD;
&#xD;
Clean up&#xD;
- delete inserted row from the table to clean up database after test</Description>
  <Test>
    <Scope name="Initialization" disabled="false">
      <Variable id="inputRecords" filePath="Input_Data/XADB2TST_Modify_Scenario_Records.xml" />
      <Variable id="oldFirstname">=inputRecords.record[0].dclxaemployee.firstname</Variable>
      <Variable id="oldLastname">=inputRecords.record[0].dclxaemployee.lastname</Variable>
      <Variable id="oldUserid">=inputRecords.record[0].dclxaemployee.userid</Variable>
      <Variable id="oldCprnr">=inputRecords.record[0].dclxaemployee.cprnr</Variable>
      <Variable id="db2CreatorName">ADKKXC0</Variable>
      <Variable id="db2TableName">XAEMPLOYEE</Variable>
      <Variable id="expectedEmployeeStatus">M</Variable>
      <Variable id="expectedUserId">XATESTER</Variable>
    </Scope>
    <Scope name="Determine DB2 Table Row Id" disabled="false">
      <SQLSelect id="selectMaxRowId" maxRows="1">
        <Statement>SELECT MAX(RIDENT) FROM ${db2CreatorName}.${db2TableName}</Statement>
        <Output name="MAX_RIDENT" />
      </SQLSelect>
      <Variable id="maxRowId">=selectMaxRowId.Row[0].MAX_RIDENT</Variable>
      <Variable id="newRowId">
        <data:Replaceable>
          <Expression>
            <Statement><![CDATA[var tempRowId = Number(maxRowId) + 1;
tempRowId.toString();]]></Statement>
          </Expression>
        </data:Replaceable>
      </Variable>
    </Scope>
    <Scope name="Add row to table" disabled="false">
      <SQLUpdate name="insertOldRecord">
        <Statement><![CDATA[INSERT INTO ${db2CreatorName}.${db2TableName} 
  (
  RIDENT, 
  FIRSTNAME, 
  LASTNAME, 
  USERID, 
  CPRNR, 
  STATUSCODE, 
  TSTMP
  )
VALUES 
  (
  '${newRowId}',
  '${oldFirstname}',
  '${oldLastname}',
  '${oldUserid}',
  ${oldCprnr},
  'O',
  current timestamp
  );]]></Statement>
      </SQLUpdate>
    </Scope>
    <Scope name="Postive Tests" disabled="false">
      <Scope name="Execute Tests" disabled="false">
        <Component label="XADB2TST" moduleName="XADB2TST" programExitVerify="value &lt; 8" rollback="false">
          <Data>
            <xadb2tst-import>
              <xadb2tst-imp-function>MODIFY</xadb2tst-imp-function>
              <xadb2tst-imp-rident>=${newRowId}</xadb2tst-imp-rident>
              <xadb2tst-imp-firstname>=inputRecords.record[1].dclxaemployee.firstname</xadb2tst-imp-firstname>
              <xadb2tst-imp-lastname>=inputRecords.record[1].dclxaemployee.lastname</xadb2tst-imp-lastname>
              <xadb2tst-imp-cprnr />
            </xadb2tst-import>
            <xadb2tst-export>
              <xadb2tst-exp-maxcount />
              <xadb2tst-exp-count />
              <xadb2tst-exp-errorcode expected="0" />
              <xadb2tst-exp-message />
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
            </xadb2tst-export>
          </Data>
        </Component>
      </Scope>
      <Scope name="Verification" disabled="false">
        <SQLSelect id="selectAfter" maxRows="20">
          <Statement>SELECT RIDENT,  FIRSTNAME,  LASTNAME,  CPRNR,  TSTMP,  USERID,  STATUSCODE FROM ${db2CreatorName}.${db2TableName} where RIDENT=${newRowId};</Statement>
          <Output name="RIDENT" />
          <Output name="FIRSTNAME" />
          <Output name="LASTNAME" />
          <Output name="CPRNR" />
          <Output name="TSTMP" />
          <Output name="USERID" />
          <Output name="STATUSCODE" />
        </SQLSelect>
        <Verify name="Firstname" haltExecution="false" description="First Name is supposed to remain unchanged">
          <Expected expression="inputRecords.record[0].dclxaemployee.firstname" />
          <Actual expression="selectAfter.Row.FIRSTNAME" />
        </Verify>
        <Verify name="Lastname" haltExecution="false" description="Last Name is supposed to be changed">
          <Expected expression="inputRecords.record[1].dclxaemployee.lastname" />
          <Actual expression="selectAfter.Row.LASTNAME" />
        </Verify>
        <Verify name="CPRNR" haltExecution="false" description="CPRNR is supposed to remain unchanged">
          <Expected expression="inputRecords.record[0].dclxaemployee.cprnr" />
          <Actual expression="selectAfter.Row.CPRNR" />
        </Verify>
        <Verify name="User Id" haltExecution="false" description="User Id is supposed to remain unchanged">
          <Expected expression="inputRecords.record[0].dclxaemployee.userid" />
          <Actual expression="selectAfter.Row.USERID" />
        </Verify>
        <Verify name="Status Code" haltExecution="false">
          <Expected expression="expectedEmployeeStatus" />
          <Actual expression="selectAfter.Row.STATUSCODE" />
        </Verify>
      </Scope>
    </Scope>
    <Scope name="Negative Tests" disabled="false">
      <Scope name="Execute Negative Test" disabled="false">
        <Variable id="nextRowId">
          <data:Replaceable>
            <Expression description="Increase newRowId by 1">
              <Statement><![CDATA[var tempRowId = Number(newRowId) + 1;
tempRowId.toString();]]></Statement>
            </Expression>
          </data:Replaceable>
        </Variable>
        <SQLSelect id="selectNonExisting" maxRows="1">
          <Statement>SELECT * FROM ${db2CreatorName}.${db2TableName} WHERE RIDENT = ${nextRowId}</Statement>
        </SQLSelect>
        <Verify name="Row does not exist" haltExecution="true">
          <Statement><![CDATA[selectNonExisting.Row == null]]></Statement>
        </Verify>
        <Component label="XADB2TST" moduleName="XADB2TST" programExitVerify="value == 12" rollback="false">
          <Data>
            <xadb2tst-import>
              <xadb2tst-imp-function>MODIFY</xadb2tst-imp-function>
              <xadb2tst-imp-rident>=${nextRowId}</xadb2tst-imp-rident>
              <xadb2tst-imp-firstname>=inputRecords.record[1].dclxaemployee.rident</xadb2tst-imp-firstname>
              <xadb2tst-imp-lastname>=inputRecords.record[1].dclxaemployee.lastname</xadb2tst-imp-lastname>
              <xadb2tst-imp-cprnr />
            </xadb2tst-import>
            <xadb2tst-export>
              <xadb2tst-exp-maxcount />
              <xadb2tst-exp-count />
              <xadb2tst-exp-errorcode>100</xadb2tst-exp-errorcode>
              <xadb2tst-exp-message />
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
              <xadb2tst-exp-table>
                <xadb2tst-exp-id />
                <xadb2tst-exp-firstname />
                <xadb2tst-exp-lastname />
                <xadb2tst-exp-cprnr />
                <xadb2tst-exp-tstmp />
                <xadb2tst-exp-statuscode />
                <xadb2tst-exp-userid />
              </xadb2tst-exp-table>
            </xadb2tst-export>
          </Data>
        </Component>
      </Scope>
    </Scope>
    <Scope name="Clean Up Database" disabled="false">
      <SQLUpdate name="Delete inserted record">
        <Statement><![CDATA[DELETE FROM ${db2CreatorName}.${db2TableName} WHERE RIDENT = ${newRowId}]]></Statement>
      </SQLUpdate>
    </Scope>
  </Test>
  <MetaData>
    <MDataDefinition name="dclxaemployee">
      <dclxaemployee native="01 DCLXAEMPLOYEE.">
        <rident type="NumericBinary" length="9" bytes="4" native="10 RIDENT PIC S9(9) USAGE COMP." signed="true" decimals="0" />
        <firstname type="Character" length="32" bytes="32" native="10 FIRSTNAME PIC X(32)." />
        <lastname type="Character" length="32" bytes="32" native="10 LASTNAME PIC X(32)." />
        <cprnr type="NumericPacked" length="10" bytes="6" native="10 CPRNR PIC S9(10)V USAGE COMP-3." signed="true" decimals="0" />
        <tstmp type="Character" length="26" bytes="26" native="10 TSTMP PIC X(26)." />
        <userid type="Character" length="8" bytes="8" native="10 USERID PIC X(8)." />
        <statuscode type="Character" length="1" bytes="1" native="10 STATUSCODE PIC X(1)." />
      </dclxaemployee>
    </MDataDefinition>
    <Component name="XADB2TST" type="COBOL">
      <INOUT>
        <xadb2tst-import>
          <xadb2tst-imp-function type="Character" length="8" bytes="8" />
          <xadb2tst-imp-rident type="NumericBinary" length="9" bytes="4" signed="true" decimals="0" />
          <xadb2tst-imp-firstname type="Character" length="30" bytes="30" />
          <xadb2tst-imp-lastname type="Character" length="30" bytes="30" />
          <xadb2tst-imp-cprnr type="NumericPacked" length="11" bytes="6" signed="true" decimals="0" />
        </xadb2tst-import>
        <xadb2tst-export>
          <xadb2tst-exp-maxcount type="NumericBinary" length="4" bytes="2" signed="true" decimals="0" />
          <xadb2tst-exp-count type="NumericBinary" length="4" bytes="2" signed="true" decimals="0" />
          <xadb2tst-exp-errorcode type="NumericBinary" length="9" bytes="4" signed="true" decimals="0" />
          <xadb2tst-exp-message type="Character" length="80" bytes="80" />
          <xadb2tst-exp-table count="7">
            <xadb2tst-exp-id type="NumericBinary" length="9" bytes="4" signed="true" decimals="0" />
            <xadb2tst-exp-firstname type="Character" length="30" bytes="30" />
            <xadb2tst-exp-lastname type="Character" length="30" bytes="30" />
            <xadb2tst-exp-cprnr type="NumericPacked" length="11" bytes="6" signed="true" decimals="0" />
            <xadb2tst-exp-tstmp type="Character" length="26" bytes="26" />
            <xadb2tst-exp-statuscode type="Character" length="1" bytes="1" />
            <xadb2tst-exp-userid type="Character" length="8" bytes="8" />
          </xadb2tst-exp-table>
        </xadb2tst-export>
      </INOUT>
    </Component>
  </MetaData>
</XaUnit>
