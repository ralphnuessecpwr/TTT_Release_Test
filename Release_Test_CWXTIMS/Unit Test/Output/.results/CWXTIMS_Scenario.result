<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 19.2.1.v20180920-0235_707?>
<!--Topaz for Total Test 19.2.1.v20180920-0235_707 02.10.2018 02:30:18-->
<result:result xmlns:result="http://www.compuware.com/model/xml/result"><result:testsuite errorCount="0" failureCount="14" testCount="220" testsuite="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test%5C.temp/CWXTIMS_Scenario.testsuite"><result:testscenarios errorCount="0" failureCount="14" testCount="220" testscenario="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Scenarios/CWXTIMS_Scenario.testscenario"><result:testcases errorCount="0" failureCount="14" testCount="220" testcase="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Scenarios/CWXTIMS_Scenario.testscenario%23CWXTIMSCase1"><result:results expectedAssert="=" expectedValue="PORDR" expression="'PORDR' eq output.arg0.PORDR_AP_PCP_MASK.PORDR_AP_DBD_NAME" name="Check for PORDR_AP_DBD_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg0.PORDR_AP_PCP_MASK.PORDR_AP_SEGMENT_LEVEL" name="Check for PORDR_AP_SEGMENT_LEVEL" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg0.PORDR_AP_PCP_MASK.PORDR_AP_STATUS_CODE" name="Check for PORDR_AP_STATUS_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="AP" expression="'AP' eq output.arg0.PORDR_AP_PCP_MASK.PORDR_AP_PROC_OPTIONS" name="Check for PORDR_AP_PROC_OPTIONS" result="Success"/><result:results expectedAssert="=" expectedValue="HDAM" expression="'HDAM' eq output.arg0.PORDR_AP_PCP_MASK.PORDR_AP_SEGMENT_NAME" name="Check for PORDR_AP_SEGMENT_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.PORDR_AP_PCP_MASK.PORDR_AP_KEY_LENGTH) eq 0" name="Check for PORDR_AP_KEY_LENGTH" result="Success"/><result:results expectedAssert="=" expectedValue="5" expression="BigDecimalCreator.make('5').compareTo(output.arg0.PORDR_AP_PCP_MASK.PORDR_AP_NUM_SENS_SEGS) eq 0" name="Check for PORDR_AP_NUM_SENS_SEGS" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg0.PORDR_AP_PCP_MASK.PORDR_AP_KEY" name="Check for PORDR_AP_KEY" result="Success"/><result:results expectedAssert="=" expectedValue="PCUST" expression="'PCUST' eq output.arg1.PCUST_AP_PCP_MASK.PCUST_AP_DBD_NAME" name="Check for PCUST_AP_DBD_NAME" result="Success"/><result:results actualValue="" expectedAssert="=" expectedValue="00" expression="'00' eq output.arg1.PCUST_AP_PCP_MASK.PCUST_AP_SEGMENT_LEVEL" message="Check for PCUST_AP_SEGMENT_LEVEL failed" name="Check for PCUST_AP_SEGMENT_LEVEL" result="Failure"/><result:results actualValue="" expectedAssert="=" expectedValue="GP" expression="'GP' eq output.arg1.PCUST_AP_PCP_MASK.PCUST_AP_STATUS_CODE" message="Check for PCUST_AP_STATUS_CODE failed" name="Check for PCUST_AP_STATUS_CODE" result="Failure"/><result:results expectedAssert="=" expectedValue="AP" expression="'AP' eq output.arg1.PCUST_AP_PCP_MASK.PCUST_AP_PROC_OPTIONS" name="Check for PCUST_AP_PROC_OPTIONS" result="Success"/><result:results actualValue="HDAM" expectedAssert="=" expectedValue="" expression="'' eq output.arg1.PCUST_AP_PCP_MASK.PCUST_AP_SEGMENT_NAME" message="Check for PCUST_AP_SEGMENT_NAME failed" name="Check for PCUST_AP_SEGMENT_NAME" result="Failure"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg1.PCUST_AP_PCP_MASK.PCUST_AP_KEY_LENGTH) eq 0" name="Check for PCUST_AP_KEY_LENGTH" result="Success"/><result:results expectedAssert="=" expectedValue="3" expression="BigDecimalCreator.make('3').compareTo(output.arg1.PCUST_AP_PCP_MASK.PCUST_AP_NUM_SENS_SEGS) eq 0" name="Check for PCUST_AP_NUM_SENS_SEGS" result="Success"/><result:results actualValue="" expectedAssert="=" expectedValue="CN019902" expression="'CN019902' eq output.arg1.PCUST_AP_PCP_MASK.PCUST_AP_KEY" message="Check for PCUST_AP_KEY failed" name="Check for PCUST_AP_KEY" result="Failure"/><result:results actualValue="PCUST" expectedAssert="=" expectedValue="PPART" expression="'PPART' eq output.arg2.PPART_AP_PCP_MASK.PPART_AP_DBD_NAME" message="Check for PPART_AP_DBD_NAME failed" name="Check for PPART_AP_DBD_NAME" result="Failure"/><result:results actualValue="00" expectedAssert="=" expectedValue="" expression="'' eq output.arg2.PPART_AP_PCP_MASK.PPART_AP_SEGMENT_LEVEL" message="Check for PPART_AP_SEGMENT_LEVEL failed" name="Check for PPART_AP_SEGMENT_LEVEL" result="Failure"/><result:results actualValue="GP" expectedAssert="=" expectedValue="NA" expression="'NA' eq output.arg2.PPART_AP_PCP_MASK.PPART_AP_STATUS_CODE" message="Check for PPART_AP_STATUS_CODE failed" name="Check for PPART_AP_STATUS_CODE" result="Failure"/><result:results expectedAssert="=" expectedValue="AP" expression="'AP' eq output.arg2.PPART_AP_PCP_MASK.PPART_AP_PROC_OPTIONS" name="Check for PPART_AP_PROC_OPTIONS" result="Success"/><result:results actualValue="" expectedAssert="=" expectedValue="HDAM" expression="'HDAM' eq output.arg2.PPART_AP_PCP_MASK.PPART_AP_SEGMENT_NAME" message="Check for PPART_AP_SEGMENT_NAME failed" name="Check for PPART_AP_SEGMENT_NAME" result="Failure"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg2.PPART_AP_PCP_MASK.PPART_AP_KEY_LENGTH) eq 0" name="Check for PPART_AP_KEY_LENGTH" result="Success"/><result:results actualValue="3" expectedAssert="=" expectedValue="2" expression="BigDecimalCreator.make('2').compareTo(output.arg2.PPART_AP_PCP_MASK.PPART_AP_NUM_SENS_SEGS) eq 0" message="Check for PPART_AP_NUM_SENS_SEGS failed" name="Check for PPART_AP_NUM_SENS_SEGS" result="Failure"/><result:results actualValue="CN019902" expectedAssert="=" expectedValue="" expression="'' eq output.arg2.PPART_AP_PCP_MASK.PPART_AP_KEY" message="Check for PPART_AP_KEY failed" name="Check for PPART_AP_KEY" result="Failure"/><result:results expectedAssert="=" expectedValue="PORDR" expression="'PORDR' eq output.arg3.PORDR_GO_PCP_MASK.PORDR_GO_DBD_NAME" name="Check for PORDR_GO_DBD_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg3.PORDR_GO_PCP_MASK.PORDR_GO_SEGMENT_LEVEL" name="Check for PORDR_GO_SEGMENT_LEVEL" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg3.PORDR_GO_PCP_MASK.PORDR_GO_STATUS_CODE" name="Check for PORDR_GO_STATUS_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="GO" expression="'GO' eq output.arg3.PORDR_GO_PCP_MASK.PORDR_GO_PROC_OPTIONS" name="Check for PORDR_GO_PROC_OPTIONS" result="Success"/><result:results expectedAssert="=" expectedValue="HDAM" expression="'HDAM' eq output.arg3.PORDR_GO_PCP_MASK.PORDR_GO_SEGMENT_NAME" name="Check for PORDR_GO_SEGMENT_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg3.PORDR_GO_PCP_MASK.PORDR_GO_KEY_LENGTH) eq 0" name="Check for PORDR_GO_KEY_LENGTH" result="Success"/><result:results expectedAssert="=" expectedValue="5" expression="BigDecimalCreator.make('5').compareTo(output.arg3.PORDR_GO_PCP_MASK.PORDR_GO_NUM_SENS_SEGS) eq 0" name="Check for PORDR_GO_NUM_SENS_SEGS" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg3.PORDR_GO_PCP_MASK.PORDR_GO_KEY" name="Check for PORDR_GO_KEY" result="Success"/><result:results expectedAssert="=" expectedValue="PCUST" expression="'PCUST' eq output.arg4.PCUST_GO_PCP_MASK.PCUST_GO_DBD_NAME" name="Check for PCUST_GO_DBD_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg4.PCUST_GO_PCP_MASK.PCUST_GO_SEGMENT_LEVEL" name="Check for PCUST_GO_SEGMENT_LEVEL" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg4.PCUST_GO_PCP_MASK.PCUST_GO_STATUS_CODE" name="Check for PCUST_GO_STATUS_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="GO" expression="'GO' eq output.arg4.PCUST_GO_PCP_MASK.PCUST_GO_PROC_OPTIONS" name="Check for PCUST_GO_PROC_OPTIONS" result="Success"/><result:results expectedAssert="=" expectedValue="HDAM" expression="'HDAM' eq output.arg4.PCUST_GO_PCP_MASK.PCUST_GO_SEGMENT_NAME" name="Check for PCUST_GO_SEGMENT_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg4.PCUST_GO_PCP_MASK.PCUST_GO_KEY_LENGTH) eq 0" name="Check for PCUST_GO_KEY_LENGTH" result="Success"/><result:results expectedAssert="=" expectedValue="3" expression="BigDecimalCreator.make('3').compareTo(output.arg4.PCUST_GO_PCP_MASK.PCUST_GO_NUM_SENS_SEGS) eq 0" name="Check for PCUST_GO_NUM_SENS_SEGS" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg4.PCUST_GO_PCP_MASK.PCUST_GO_KEY" name="Check for PCUST_GO_KEY" result="Success"/><result:results expectedAssert="=" expectedValue="PPART" expression="'PPART' eq output.arg5.PPART_GO_PCP_MASK.PPART_GO_DBD_NAME" name="Check for PPART_GO_DBD_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg5.PPART_GO_PCP_MASK.PPART_GO_SEGMENT_LEVEL" name="Check for PPART_GO_SEGMENT_LEVEL" result="Success"/><result:results expectedAssert="=" expectedValue="NA" expression="'NA' eq output.arg5.PPART_GO_PCP_MASK.PPART_GO_STATUS_CODE" name="Check for PPART_GO_STATUS_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="GO" expression="'GO' eq output.arg5.PPART_GO_PCP_MASK.PPART_GO_PROC_OPTIONS" name="Check for PPART_GO_PROC_OPTIONS" result="Success"/><result:results expectedAssert="=" expectedValue="HDAM" expression="'HDAM' eq output.arg5.PPART_GO_PCP_MASK.PPART_GO_SEGMENT_NAME" name="Check for PPART_GO_SEGMENT_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg5.PPART_GO_PCP_MASK.PPART_GO_KEY_LENGTH) eq 0" name="Check for PPART_GO_KEY_LENGTH" result="Success"/><result:results expectedAssert="=" expectedValue="2" expression="BigDecimalCreator.make('2').compareTo(output.arg5.PPART_GO_PCP_MASK.PPART_GO_NUM_SENS_SEGS) eq 0" name="Check for PPART_GO_NUM_SENS_SEGS" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq output.arg5.PPART_GO_PCP_MASK.PPART_GO_KEY" name="Check for PPART_GO_KEY" result="Success"/><result:stubAssertion errorCount="0" failureCount="4" testCount="152" stub="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.0"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="00765" expression="'00765' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.1"><result:results expectedAssert="=" expectedValue="CUSTOMER NUMBER:" expression="'CUSTOMER NUMBER:' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0001" expression="'CN0001' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.RPT_CUST_ID" name="Check for RPT_CUST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.2"><result:results expectedAssert="=" expectedValue=" CUSTOMER NAME:" expression="' CUSTOMER NAME:' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="ACME COMPUTER PRODUCTS CORPORATION" expression="'ACME COMPUTER PRODUCTS CORPORATION' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.RPT_CUST_NAME" name="Check for RPT_CUST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="1" testCount="4" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.3"><result:results expectedAssert="=" expectedValue="  ACTIVITY:" expression="'  ACTIVITY:' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results actualValue="0" expectedAssert="=" expectedValue="1092" expression="BigDecimalCreator.make('1092').compareTo(result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.RPT_SALES_ACTIVITY_DUR_DISP) eq 0" message="Check for RPT_SALES_ACTIVITY_DUR_DISP failed" name="Check for RPT_SALES_ACTIVITY_DUR_DISP" result="Failure"/><result:results expectedAssert="=" expectedValue=" DAYS" expression="' DAYS' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER2" name="Check for FILLER2" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="7" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.4"><result:results expectedAssert="=" expectedValue=" CONTACT" expression="' CONTACT' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="1" expression="BigDecimalCreator.make('1').compareTo(result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_CONTACT_COUNT_DISP) eq 0" name="Check for RPT_CONTACT_COUNT_DISP" result="Success"/><result:results expectedAssert="=" expectedValue=":" expression="':' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="BILL JOHNSON" expression="'BILL JOHNSON' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_NAME" name="Check for RPT_SA_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="," expression="',' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="PURCHASING ANALYST" expression="'PURCHASING ANALYST' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_TITLE" name="Check for RPT_SA_TITLE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER3" name="Check for FILLER3" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="7" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.5"><result:results expectedAssert="=" expectedValue=" CONTACT" expression="' CONTACT' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="2" expression="BigDecimalCreator.make('2').compareTo(result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_CONTACT_COUNT_DISP) eq 0" name="Check for RPT_CONTACT_COUNT_DISP" result="Success"/><result:results expectedAssert="=" expectedValue=":" expression="':' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="PHIL SMITHERS" expression="'PHIL SMITHERS' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_NAME" name="Check for RPT_SA_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="," expression="',' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="BUYER" expression="'BUYER' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_TITLE" name="Check for RPT_SA_TITLE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER3" name="Check for FILLER3" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.6"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.7"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="00959" expression="'00959' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.8"><result:results expectedAssert="=" expectedValue="CUSTOMER NUMBER:" expression="'CUSTOMER NUMBER:' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0002" expression="'CN0002' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.RPT_CUST_ID" name="Check for RPT_CUST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.9"><result:results expectedAssert="=" expectedValue=" CUSTOMER NAME:" expression="' CUSTOMER NAME:' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="PEACHTREE PERIPHERALS" expression="'PEACHTREE PERIPHERALS' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.RPT_CUST_NAME" name="Check for RPT_CUST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="1" testCount="4" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.10"><result:results expectedAssert="=" expectedValue="  ACTIVITY:" expression="'  ACTIVITY:' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results actualValue="0" expectedAssert="=" expectedValue="738" expression="BigDecimalCreator.make('738').compareTo(result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.RPT_SALES_ACTIVITY_DUR_DISP) eq 0" message="Check for RPT_SALES_ACTIVITY_DUR_DISP failed" name="Check for RPT_SALES_ACTIVITY_DUR_DISP" result="Failure"/><result:results expectedAssert="=" expectedValue=" DAYS" expression="' DAYS' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER2" name="Check for FILLER2" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="7" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.11"><result:results expectedAssert="=" expectedValue=" CONTACT" expression="' CONTACT' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="1" expression="BigDecimalCreator.make('1').compareTo(result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_CONTACT_COUNT_DISP) eq 0" name="Check for RPT_CONTACT_COUNT_DISP" result="Success"/><result:results expectedAssert="=" expectedValue=":" expression="':' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="BILL KAISER" expression="'BILL KAISER' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_NAME" name="Check for RPT_SA_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="," expression="',' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="BUYER" expression="'BUYER' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_TITLE" name="Check for RPT_SA_TITLE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER3" name="Check for FILLER3" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.12"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.13"><result:results expectedAssert="=" expectedValue="CUSTOMER NUMBER:" expression="'CUSTOMER NUMBER:' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0088" expression="'CN0088' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.RPT_CUST_ID" name="Check for RPT_CUST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.14"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.15"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="01431" expression="'01431' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.16"><result:results expectedAssert="=" expectedValue="CUSTOMER NUMBER:" expression="'CUSTOMER NUMBER:' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0033" expression="'CN0033' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.RPT_CUST_ID" name="Check for RPT_CUST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.17"><result:results expectedAssert="=" expectedValue=" CUSTOMER NAME:" expression="' CUSTOMER NAME:' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="COMPUTER SPECIALTIES" expression="'COMPUTER SPECIALTIES' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.RPT_CUST_NAME" name="Check for RPT_CUST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="1" testCount="4" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.18"><result:results expectedAssert="=" expectedValue="  ACTIVITY:" expression="'  ACTIVITY:' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results actualValue="0" expectedAssert="=" expectedValue="1106" expression="BigDecimalCreator.make('1106').compareTo(result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.RPT_SALES_ACTIVITY_DUR_DISP) eq 0" message="Check for RPT_SALES_ACTIVITY_DUR_DISP failed" name="Check for RPT_SALES_ACTIVITY_DUR_DISP" result="Failure"/><result:results expectedAssert="=" expectedValue=" DAYS" expression="' DAYS' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER2" name="Check for FILLER2" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="7" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.19"><result:results expectedAssert="=" expectedValue=" CONTACT" expression="' CONTACT' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="1" expression="BigDecimalCreator.make('1').compareTo(result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_CONTACT_COUNT_DISP) eq 0" name="Check for RPT_CONTACT_COUNT_DISP" result="Success"/><result:results expectedAssert="=" expectedValue=":" expression="':' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="JEFF LINCOLN" expression="'JEFF LINCOLN' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_NAME" name="Check for RPT_SA_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="," expression="',' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="STOCK MANAGER" expression="'STOCK MANAGER' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_TITLE" name="Check for RPT_SA_TITLE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER3" name="Check for FILLER3" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="7" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.20"><result:results expectedAssert="=" expectedValue=" CONTACT" expression="' CONTACT' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="2" expression="BigDecimalCreator.make('2').compareTo(result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_CONTACT_COUNT_DISP) eq 0" name="Check for RPT_CONTACT_COUNT_DISP" result="Success"/><result:results expectedAssert="=" expectedValue=":" expression="':' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="PERRY RUSTIN" expression="'PERRY RUSTIN' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_NAME" name="Check for RPT_SA_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="," expression="',' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="STORES CLERK" expression="'STORES CLERK' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_TITLE" name="Check for RPT_SA_TITLE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER3" name="Check for FILLER3" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.21"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.22"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="02010" expression="'02010' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.23"><result:results expectedAssert="=" expectedValue="CUSTOMER NUMBER:" expression="'CUSTOMER NUMBER:' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0001" expression="'CN0001' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.RPT_CUST_ID" name="Check for RPT_CUST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.24"><result:results expectedAssert="=" expectedValue=" CUSTOMER NAME:" expression="' CUSTOMER NAME:' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="ACME COMPUTER PRODUCTS CORPORATION" expression="'ACME COMPUTER PRODUCTS CORPORATION' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.RPT_CUST_NAME" name="Check for RPT_CUST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="1" testCount="4" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.25"><result:results expectedAssert="=" expectedValue="  ACTIVITY:" expression="'  ACTIVITY:' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results actualValue="0" expectedAssert="=" expectedValue="1092" expression="BigDecimalCreator.make('1092').compareTo(result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.RPT_SALES_ACTIVITY_DUR_DISP) eq 0" message="Check for RPT_SALES_ACTIVITY_DUR_DISP failed" name="Check for RPT_SALES_ACTIVITY_DUR_DISP" result="Failure"/><result:results expectedAssert="=" expectedValue=" DAYS" expression="' DAYS' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER2" name="Check for FILLER2" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="7" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.26"><result:results expectedAssert="=" expectedValue=" CONTACT" expression="' CONTACT' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="1" expression="BigDecimalCreator.make('1').compareTo(result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_CONTACT_COUNT_DISP) eq 0" name="Check for RPT_CONTACT_COUNT_DISP" result="Success"/><result:results expectedAssert="=" expectedValue=":" expression="':' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="BILL JOHNSON" expression="'BILL JOHNSON' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_NAME" name="Check for RPT_SA_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="," expression="',' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="PURCHASING ANALYST" expression="'PURCHASING ANALYST' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_TITLE" name="Check for RPT_SA_TITLE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER3" name="Check for FILLER3" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="7" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.27"><result:results expectedAssert="=" expectedValue=" CONTACT" expression="' CONTACT' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="2" expression="BigDecimalCreator.make('2').compareTo(result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_CONTACT_COUNT_DISP) eq 0" name="Check for RPT_CONTACT_COUNT_DISP" result="Success"/><result:results expectedAssert="=" expectedValue=":" expression="':' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="PHIL SMITHERS" expression="'PHIL SMITHERS' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_NAME" name="Check for RPT_SA_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="," expression="',' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="BUYER" expression="'BUYER' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.RPT_SA_TITLE" name="Check for RPT_SA_TITLE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CONTACT_REC.RPT_CONTACT_REC.FILLER3" name="Check for FILLER3" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.28"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.29"><result:results expectedAssert="=" expectedValue="CUSTOMER NUMBER:" expression="'CUSTOMER NUMBER:' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0055" expression="'CN0055' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.RPT_CUST_ID" name="Check for RPT_CUST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.30"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.31"><result:results expectedAssert="=" expectedValue="CUSTOMER NUMBER:" expression="'CUSTOMER NUMBER:' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0099" expression="'CN0099' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.RPT_CUST_ID" name="Check for RPT_CUST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.32"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.33"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="02334" expression="'02334' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.34"><result:results expectedAssert="=" expectedValue="CUSTOMER NUMBER:" expression="'CUSTOMER NUMBER:' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0199" expression="'CN0199' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.RPT_CUST_ID" name="Check for RPT_CUST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_ID_REC.RPT_CUST_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.35"><result:results expectedAssert="=" expectedValue="CUSTOMER NOT FOUND:" expression="'CUSTOMER NOT FOUND:' eq result.arg0.RPT_CUST_NOT_FOUND_REC.RPT_CUST_NOT_FOUND_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="CN0199" expression="'CN0199' eq result.arg0.RPT_CUST_NOT_FOUND_REC.RPT_CUST_NOT_FOUND_REC.RPT_CUST_SSA_KEY" name="Check for RPT_CUST_SSA_KEY" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_NOT_FOUND_REC.RPT_CUST_NOT_FOUND_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.36"><result:results expectedAssert="=" expectedValue=" CUSTOMER NAME:" expression="' CUSTOMER NAME:' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.RPT_CUST_NAME" name="Check for RPT_CUST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_CUST_NAME_REC.RPT_CUST_NAME_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="4" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.37"><result:results expectedAssert="=" expectedValue="  ACTIVITY:" expression="'  ACTIVITY:' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.RPT_SALES_ACTIVITY_DUR_DISP) eq 0" name="Check for RPT_SALES_ACTIVITY_DUR_DISP" result="Success"/><result:results expectedAssert="=" expectedValue=" DAYS" expression="' DAYS' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_ACTIVITY_REC.RPT_ACTIVITY_REC.FILLER2" name="Check for FILLER2" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.38"><result:results expectedAssert="=" expectedValue="ERROR IN CUST DB:" expression="'ERROR IN CUST DB:' eq result.arg0.RPT_ERROR_REC.RPT_ERROR_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="GP" expression="'GP' eq result.arg0.RPT_ERROR_REC.RPT_ERROR_REC.RPT_ERROR_STATUS_CODE" name="Check for RPT_ERROR_STATUS_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_ERROR_REC.RPT_ERROR_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.39"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.40"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="03215" expression="'03215' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.41"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="04147" expression="'04147' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.42"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="05213" expression="'05213' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.43"><result:results expectedAssert="=" expectedValue="SALES ID:" expression="'SALES ID:' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="06745" expression="'06745' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.RPT_SALES_ID" name="Check for RPT_SALES_ID" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_SALES_ID_REC.RPT_SALES_ID_REC.FILLER1" name="Check for FILLER1" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.44"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.RPT_BLANK_LINE.RPT_BLANK_LINE" name="Check for RPT_BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="2" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.Unit%20Test/Stubs/CWXTIMS_SALREPT_WRITE_01.stub.45"><result:results expectedAssert="=" expectedValue="SALES RECORDS PROCESSED:" expression="'SALES RECORDS PROCESSED:' eq result.arg0.RPT_TOTAL_LINE.RPT_TOTAL_LINE.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="10" expression="BigDecimalCreator.make('10').compareTo(result.arg0.RPT_TOTAL_LINE.RPT_TOTAL_LINE.RPT_RECORDS_READ) eq 0" name="Check for RPT_RECORDS_READ" result="Success"/></result:stubdataassertions></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="20" stub="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.0"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.1"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.2"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.3"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.4"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.5"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.6"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.7"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.8"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.9"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.10"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.11"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.12"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.13"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.14"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.15"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.16"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.17"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.18"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/Release_Test_CWXTIMS/Unit%20Test/Output/Last%20Execution/CWXTIMS_Scenario.archive#Unit%20Test/Stubs/CBLTDLI_PCUST-AP-PCP-MASK_01.stub.19"/></result:stubAssertion></result:testcases></result:testscenarios></result:testsuite></result:result>