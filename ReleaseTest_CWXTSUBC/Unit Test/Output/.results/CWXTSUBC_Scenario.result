<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 19.2.1.v20180920-0235_707?>
<!--Topaz for Total Test 19.2.1.v20180920-0235_707 01.10.2018 22:49:47-->
<result:result xmlns:result="http://www.compuware.com/model/xml/result"><result:testsuite errorCount="0" failureCount="0" testCount="33" testsuite="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test%5C.temp/CWXTSUBC_Scenario.testsuite"><result:testscenarios errorCount="0" failureCount="0" testCount="33" testscenario="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario"><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase1"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="55000.00" expression="BigDecimalCreator.make('55000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="3300.00" expression="BigDecimalCreator.make('3300.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase2"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="25000.00" expression="BigDecimalCreator.make('25000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="1000.00" expression="BigDecimalCreator.make('1000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase3"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="75000.00" expression="BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="6000.00" expression="BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase4"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="55550.00" expression="BigDecimalCreator.make('55550.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="3333.00" expression="BigDecimalCreator.make('3333.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase5"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="75000.00" expression="BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="6000.00" expression="BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase6"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="28000.00" expression="BigDecimalCreator.make('28000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="1120.00" expression="BigDecimalCreator.make('1120.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase7"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="75000.00" expression="BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="6000.00" expression="BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase8"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="80000.00" expression="BigDecimalCreator.make('80000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="1600.00" expression="BigDecimalCreator.make('1600.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase9"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="103000.00" expression="BigDecimalCreator.make('103000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="2575.00" expression="BigDecimalCreator.make('2575.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase10"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="75000.00" expression="BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="1500.00" expression="BigDecimalCreator.make('1500.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/ReleaseTest_CWXTSUBC/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase11"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="130550.00" expression="BigDecimalCreator.make('130550.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="3263.75" expression="BigDecimalCreator.make('3263.75').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases></result:testscenarios></result:testsuite></result:result>